name: PreCommitChecks

on:
  push:
    branches:
    - main
    - '!release*'
  pull_request:
    branches:
    - main
    - '!release*'
jobs:
  linting:
    name: 'Run PreComitChecks: ruff, black etc..'
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']
        os: [ubuntu-20.04]       # , "macos-latest"
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      # Checkout, SetUp Python, Load Cache and Lint
      #----------------------------------------------
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

      # Install Python
    - uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Check Python ${{ matrix.python-version }} version
      run: python -V

    #   # Setup Python Poetry
    #   - name: Install Poetry
    #     uses: snok/install-poetry@v1
    #     with:
    #         virtualenvs-create: true
    #         virtualenvs-in-project: true
    #         installer-parallel: true

    #   # load cached venv if cache exists
    #   - name: Load cached venv
    #     id: cached-poetry-dependencies
    #     uses: actions/cache@v4
    #     with:
    #         path: .venv
    #         key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

    #   - uses: actions/cache@v4
    #     with:
    #         path: ~/.cache/pip
    #         key: ${{ runner.os }}-pip
    #         restore-keys: ${{ runner.os }}-pip

    - uses: pre-commit/action@v3.0.1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
